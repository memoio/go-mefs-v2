// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: datamessage.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// on DataChain
type DataTxType int32

const (
	DataTxType_DataTxErr DataTxType = 0
	// register
	DataTxType_CreateRole     DataTxType = 1
	DataTxType_UpdateGasMoney DataTxType = 3
	DataTxType_WithdrawFee    DataTxType = 4
	DataTxType_UpdateNetAddr  DataTxType = 6
	DataTxType_SetEpoch       DataTxType = 7
	// data tx; after user is added
	DataTxType_CreateBucket DataTxType = 11
	// order
	DataTxType_DataPreOrder    DataTxType = 12
	DataTxType_DataOrder       DataTxType = 13
	DataTxType_DataCommitOrder DataTxType = 14
	DataTxType_CommitSector    DataTxType = 15
	DataTxType_SetChalEpoch    DataTxType = 16
	DataTxType_SegmentProof    DataTxType = 17
	DataTxType_SectorProof     DataTxType = 18
	DataTxType_SegmentFault    DataTxType = 19
	DataTxType_SectorFault     DataTxType = 20
	DataTxType_PostIncome      DataTxType = 21
)

var DataTxType_name = map[int32]string{
	0:  "DataTxErr",
	1:  "CreateRole",
	3:  "UpdateGasMoney",
	4:  "WithdrawFee",
	6:  "UpdateNetAddr",
	7:  "SetEpoch",
	11: "CreateBucket",
	12: "DataPreOrder",
	13: "DataOrder",
	14: "DataCommitOrder",
	15: "CommitSector",
	16: "SetChalEpoch",
	17: "SegmentProof",
	18: "SectorProof",
	19: "SegmentFault",
	20: "SectorFault",
	21: "PostIncome",
}

var DataTxType_value = map[string]int32{
	"DataTxErr":       0,
	"CreateRole":      1,
	"UpdateGasMoney":  3,
	"WithdrawFee":     4,
	"UpdateNetAddr":   6,
	"SetEpoch":        7,
	"CreateBucket":    11,
	"DataPreOrder":    12,
	"DataOrder":       13,
	"DataCommitOrder": 14,
	"CommitSector":    15,
	"SetChalEpoch":    16,
	"SegmentProof":    17,
	"SectorProof":     18,
	"SegmentFault":    19,
	"SectorFault":     20,
	"PostIncome":      21,
}

func (x DataTxType) String() string {
	return proto.EnumName(DataTxType_name, int32(x))
}

func (DataTxType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_af486f1354133e1e, []int{0}
}

func init() {
	proto.RegisterEnum("pb.DataTxType", DataTxType_name, DataTxType_value)
}

func init() { proto.RegisterFile("datamessage.proto", fileDescriptor_af486f1354133e1e) }

var fileDescriptor_af486f1354133e1e = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x41, 0x4e, 0x83, 0x40,
	0x14, 0x86, 0x4b, 0x35, 0x55, 0x5f, 0x0b, 0x3c, 0xa6, 0xba, 0xe5, 0x00, 0x2e, 0xdc, 0x78, 0x02,
	0x8b, 0xad, 0x71, 0xa1, 0x12, 0xa9, 0x71, 0x3d, 0x65, 0x9e, 0xa5, 0x11, 0x18, 0x32, 0xbc, 0x46,
	0x7b, 0x13, 0xef, 0xe1, 0x25, 0x5c, 0x7a, 0x04, 0x83, 0x17, 0x31, 0xc3, 0xc4, 0xe8, 0xf2, 0xff,
	0xf2, 0xe5, 0xbd, 0x3f, 0x3f, 0x44, 0x4a, 0xb2, 0xac, 0xa8, 0x6d, 0xe5, 0x9a, 0xce, 0x1a, 0xa3,
	0x59, 0x8b, 0x61, 0xb3, 0x3a, 0x7d, 0x1f, 0x02, 0x5c, 0x4a, 0x96, 0xcb, 0xd7, 0xe5, 0xae, 0x21,
	0xe1, 0xc3, 0x91, 0x4b, 0x73, 0x63, 0x70, 0x20, 0x02, 0x80, 0xc4, 0x90, 0x64, 0xba, 0xd7, 0x25,
	0xa1, 0x27, 0x04, 0x04, 0x0f, 0x8d, 0x92, 0x4c, 0x57, 0xb2, 0xbd, 0xd1, 0x35, 0xed, 0x70, 0x4f,
	0x84, 0x30, 0x7e, 0xdc, 0x70, 0xa1, 0x8c, 0x7c, 0x59, 0x10, 0xe1, 0xbe, 0x88, 0xc0, 0x77, 0xd2,
	0x2d, 0xf1, 0x85, 0x52, 0x06, 0x47, 0x62, 0x02, 0x87, 0x19, 0xf1, 0xbc, 0xd1, 0x79, 0x81, 0x07,
	0x02, 0x61, 0xe2, 0xae, 0xce, 0xb6, 0xf9, 0x33, 0x31, 0x8e, 0x2d, 0xb1, 0x6f, 0x53, 0x43, 0x77,
	0x46, 0x91, 0xc1, 0xc9, 0x6f, 0x11, 0x17, 0x7d, 0x31, 0x85, 0xd0, 0xc6, 0x44, 0x57, 0xd5, 0x86,
	0x1d, 0x0c, 0xfa, 0x3b, 0x3d, 0xc8, 0x28, 0x67, 0x6d, 0x30, 0xb4, 0x24, 0x23, 0x4e, 0x0a, 0x59,
	0xba, 0x5f, 0xe8, 0xc8, 0xba, 0xa2, 0x9a, 0x53, 0xa3, 0xf5, 0x13, 0x46, 0xb6, 0xaf, 0xf3, 0x1d,
	0x10, 0xff, 0x94, 0x85, 0xdc, 0x96, 0x8c, 0xd3, 0x3f, 0xc5, 0x81, 0x63, 0xbb, 0x43, 0xaa, 0x5b,
	0xbe, 0xae, 0x73, 0x5d, 0x11, 0x9e, 0xcc, 0xf0, 0xa3, 0x8b, 0xbd, 0xcf, 0x2e, 0xf6, 0xbe, 0xba,
	0xd8, 0x7b, 0xfb, 0x8e, 0x07, 0xab, 0x51, 0x3f, 0xe9, 0xf9, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x18, 0x45, 0xc5, 0xc5, 0x67, 0x01, 0x00, 0x00,
}
