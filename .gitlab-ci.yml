image: golang:1.18.7

stages:
  - compile

variables:
  SSH_PRIVATE_KEY: "ci-test"

before_script:
  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  ##
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'

  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)

  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

  - echo -e "Host *\nStrictHostKeyChecking no\n" > ~/.ssh/config
 

  ## set go proxy
  - go env -w GOPROXY=https://goproxy.cn,direct


compile:
  stage: compile
  when: always
  script:
    - cd $CI_PROJECT_DIR
    - chmod +x $CI_PROJECT_DIR/scripts/update.sh
    - $CI_PROJECT_DIR/scripts/update.sh $CI_PROJECT_DIR/../
    - cd $CI_PROJECT_DIR
    - make
  tags:
    - "compile"




